[데이터 호출 시점]

1. 라우터 네비게이션 가드
  - 특정 URL로 접근하기 전의 동작을 정의하는 속성()

2. 컵포넌트 라이프 싸이클 훅
  - created : 컴포넌트가 생성되자마자 호출되는 로직

[외부 라이브러리 모듈화]

  - 이유: 1) Vue.js  관련 라이블리가 없을 때 일반 라이브러리를 결합할 수 있어야 함
  - 종류
    1) 차트
    2) 데이트 피커
    3) 테이블
    4) 스피너

  - chart.js 실행
    1) 차트 라이브러리를 npm 으로 설치 (npm i chart.js / npm i chart.js@2)
    2) 설치된 라이브러리를 import 로 App.vue에서 로딩
    3) mounted() 라이프 사이클 훅에서 차트를 그림
    4) 차트 컴포넌트화 
    5) 컴폰넌트 플러그인화
    6) 컴포넌트 통신을 이용한 차트 컴포넌트 기능 결합 

    # ref 속성 = 각각의 컴포넌트 내에서만 접근할 수 있는 접근자기 때문에 컴포넌트 간의 충돌날 확률이 적다
    <div ref="hello"></div>
    this.$refs.hello


[컴포넌트 디자인 패턴]
  1. Common - 기본적인 컴포넌트 등록과 컴포넌트 통신 
  2. Slot -  마크업 확장이 가능한 컴포넌트 
  3. Controlled - 결합력과 높은 컴포넌트 
  4. Renderless - 데이터 처리 컴포넌트 